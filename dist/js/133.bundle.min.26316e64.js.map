{"version":3,"sources":["webpack://car-loan-view-ui/./src/components/scroll-bar/style.ts","webpack://car-loan-view-ui/./src/components/scroll-bar/scroll-bar.tsx","webpack://car-loan-view-ui/./src/data-layer/application/actionTypes.ts","webpack://car-loan-view-ui/./src/history.ts","webpack://car-loan-view-ui/./src/routes/index.tsx","webpack://car-loan-view-ui/./src/assets/normalize.ts","webpack://car-loan-view-ui/./src/app/app.tsx","webpack://car-loan-view-ui/./src/data-layer/application/reducer.ts","webpack://car-loan-view-ui/./src/data-layer/store.ts","webpack://car-loan-view-ui/./src/app/index.tsx","webpack://car-loan-view-ui/./src/exposes/index.tsx"],"names":["ScrollBarWrapper","styled","minHeight","maxHeight","height","props","children","GET_APPLICATIONS","GET_APPLICATIONS_SUCCESS","GET_APPLICATIONS_FAIL","ua","history","navigator","userAgent","indexOf","createBrowserHistory","createMemoryHistory","SuspenseSpinner","style","margin","display","justifyContent","StartPage","lazy","routes","path","exact","component","Suspense","fallback","isMobile","MobileDetect","window","mobile","GlobalStyle","createGlobalStyle","App","isFederate","useRouteMatch","backgroundColor","position","map","route","i","key","render","initialState","createLogger","collapsed","routerMiddle","routerMiddleware","createStore","combineReducers","router","connectRouter","applicationsReducer","state","action","type","actionTypes","appIsLoading","applications","totalPages","applyMiddleware","thunk","store"],"mappings":"2yBAEO,IAAMA,E,MAAmBC,OAAH,KAMzB,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,OAAxB,kCACcF,EADd,8BAEcC,EAFd,0BAGUC,EAHV,YCaJ,EAXA,SAAmBC,GACjB,OACE,kBAACL,EAAD,CACEG,UAAWE,EAAMF,UACjBD,UAAWG,EAAMH,UACjBE,OAAQC,EAAMD,QACbC,EAAMC,Y,oHChBN,IAAMC,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAAwB,yB,6FCG7BC,E,gEAHKC,GAGLD,EAAKE,UAAUC,WAEXC,QAAQ,UAAY,GAAKJ,EAAGI,QAAQ,aAAe,GAL/BC,WAAyBC,U,+DCCnDC,EAAkB,kBACtB,yBAAKC,MAAO,CACVC,OAAQ,WACRC,QAAS,OACTC,eAAgB,WAChB,kBAAC,KAAD,QAIEC,GAAYC,WAAK,kBAAM,yDAahBC,EAAoB,CAC/B,CACEC,KAAM,IACNC,OAAO,EACPC,UAhByB,SAACtB,GAAD,OAC3B,kBAAC,EAAAuB,SAAD,CAAUC,SAAU,kBAACZ,EAAD,OAClB,kBAACK,EAAcjB,O,wpDCZnB,IACMyB,IADK,I,MAAIC,GAAJ,CAAiBC,OAAOpB,UAAUC,WACvBoB,SAETC,GAAcC,uBAAH,IAIhBL,EAAQ,wEAIN,I,WCDGM,EAAM,SAAC/B,GAAqB,IAChCgC,EAAchC,EAAdgC,WACAZ,GAAQa,UAARb,KACP,OACE,yBAAKP,MAAO,CAACqB,gBAAiB,YAC5B,kBAACL,EAAD,MACA,yBAAKhB,MAAO,CAACsB,SAAU,aACrB,kBAAC,KAAD,KACGhB,EAAOiB,KAAI,SAACC,EAAgBC,GAAjB,OACV,kBAAC,KAAD,CACEC,IAAKD,EACLjB,MAAOgB,EAAMhB,MACbD,KAAI,UAAKA,GAAL,OAAYiB,EAAMjB,MACtBoB,OAAQ,SAACxC,GACP,OAAO,kBAAC,IAAD,CACLD,OAAM,uBAAkBiC,EAAa,IAAM,GAArC,QACN,kBAACK,EAAMf,UAActB,c,y3BCvBvC,IAAMyC,EAAoB,G,2GCGXC,kBAAa,CAC1BC,WAAW,IAHb,I,EAUMC,GAAeC,OAAiBvC,GAWtC,GALcwC,SAVkBC,QAAgB,CAC9CC,QAAQC,QAAc3C,GACtB4C,oBDNyB,WAGJ,IAFnBC,EAEmB,uDAFNV,EACbW,EACmB,uCACrB,OAAQA,EAAOC,MACb,KAAKC,KACH,cACKH,GADL,IAEEI,cAAc,IAElB,KAAKD,KACH,cACKH,GADL,IAEEI,cAAc,EACdC,aAAcJ,EAAOI,aACrBC,WAAYL,EAAOK,aAGzB,OAAON,KCFLO,gBAAA,E,+CAL6C,CAACd,EAAce,O,+iBCbhE,WAAgB3D,GACd,OACE,kBAAC,KAAD,CAAU4D,MAAOA,GACf,kBAAC,KAAD,CAAiBtD,QAASA,GACxB,kBAACyB,EAAQ/B,M,+MCJjB,MAJA,SAAiBA,GACf,OAAQ,kBAAC,EAAD,GAAKgC,YAAY,GAAUhC,M","file":"js/133.bundle.min.26316e64.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ScrollBarWrapper = styled.div<\n  {\n    minHeight: string;\n    maxHeight: string;\n    height: string;\n  }>`\n  ${({minHeight, maxHeight, height}) => `\n    min-height: ${minHeight};\n    max-height: ${maxHeight};\n    height: ${height};\n  `}\n  //border: 1px solid #0062FF;\n  overflow-y: auto;\n  overflow-x: hidden;\n  \n  &::-webkit-scrollbar {\n    width: 10px;\n  }    \n  &::-webkit-scrollbar-track {\n    background: #E7E7E7; \n  }  \n  &::-webkit-scrollbar-thumb {\n    background: #97A9BE;\n    border-radius: 5px; \n  }  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #97A7BC; \n  }\n  &::-webkit-scrollbar-track-piece {\n    background: #FFFFFF;\n  }\n`;\n","import React from 'react';\nimport {ScrollBarWrapper} from './style';\n\ninterface IProps {\n  minHeight?: string\n  maxHeight?: string\n  height?: string\n  children: any\n}\n\nfunction ScrollBar(props: IProps) {\n  return (\n    <ScrollBarWrapper\n      maxHeight={props.maxHeight}\n      minHeight={props.minHeight}\n      height={props.height}>\n      {props.children}\n    </ScrollBarWrapper>\n  );\n}\n\nexport default ScrollBar;\n","export const GET_APPLICATIONS = 'GET_APPLICATIONS';\nexport const GET_APPLICATIONS_SUCCESS = 'GET_APPLICATIONS_SUCCESS';\nexport const GET_APPLICATIONS_FAIL = 'GET_APPLICATIONS_FAIL';\n","import {createBrowserHistory, createMemoryHistory} from 'history';\n\nexport const history = isIE() ? createBrowserHistory() : createMemoryHistory();\n\nfunction isIE() {\n  const ua = navigator.userAgent;\n  /* MSIE used to detect old browsers and Trident used to newer ones*/\n  return ua.indexOf('MSIE ') > -1 || ua.indexOf('Trident/') > -1;\n}\n","import {Spinner} from '@openvtb/react-ui-kit';\nimport React, {lazy, Suspense} from 'react';\n\nconst SuspenseSpinner = () => (\n  <div style={{\n    margin: '25% auto',\n    display: 'flex',\n    justifyContent: 'center'}}>\n    <Spinner />\n  </div>\n);\n\nconst StartPage = lazy(() => import('src/pages/start-page'));\nexport const StartPageLazy = (props: any) => (\n  <Suspense fallback={<SuspenseSpinner />}>\n    <StartPage {...props} />\n  </Suspense>\n);\nexport interface IRouter {\n  path: string;\n  component: (props: any) => JSX.Element;\n  routes?: IRouter[];\n  exact?: boolean;\n  stage?: boolean;\n}\nexport const routes: IRouter[] = [\n  {\n    path: `/`,\n    exact: true,\n    component: StartPageLazy,\n  }\n];\n","import {createGlobalStyle} from 'styled-components';\nimport MobileDetect from 'mobile-detect';\n\nconst md = new MobileDetect(window.navigator.userAgent);\nconst isMobile = !!md.mobile();\n\nexport const GlobalStyle = createGlobalStyle`                            \n    html, body {\n      box-sizing: border-box;\n      ${\n        isMobile ?\n          `\n      overflow-y: scroll;\n      -webkit-overflow-scrolling: touch;` :\n          ''\n}\n    }     \n    \n    body {   \n      margin: 0;\n      padding: 0;\n      height: 100%;           \n      color: black;\n      background-color: #EDF5FF;\n      font-family: 'Inter' !important;           \n    }\n\n    body::-webkit-scrollbar {\n      display: none;\n    }\n  \n    #root {\n      min-height: 100%;\n      height: 100%;\n      overflow-x: hidden;         \n    }     \n    \n    #ModalContainer {\n      position: absolute;\n      z-index: 100;\n    }   \n    \n    h1, h2, h3, h4, h5, h6 {\n      font-family: 'Inter';\n      font-weight: bold;\n      margin: 0;\n    } \n    \n    \n    h1 {\n      font-size: 1.75rem;\n    }\n    \n    h2 {\n      font-size: 1.375rem;\n    }\n    \n    h3 {\n      font-size: 1.125rem;\n    }\n    \n    h4 {\n      font-size: 1rem;\n    }\n    \n    h5 {\n      font-size: 0.875rem;\n    }\n    \n    h6 {\n      font-size: 0.725rem;\n    }  \n    \n    *,\n    *::before,\n    *::after {\n        box-sizing: inherit;\n    }\n        \n    .hidden {\n        display: none;\n    }        \n    \n    a {\n      color: blue;\n      cursor: pointer;\n      text-decoration: none;\n    }  \n\n    p {\n     color: grey;\n     font-size: 1.125rem;\n     margin: 0;\n     padding: 0;\n    }  \n    \n    .form {\n        width: 20rem;\n    }\n    \n    pre {\n      margin: 0;\n      padding: 0;\n    }                                   \n`;\n","import React from 'react';\nimport {Switch,\n  Route, RouteComponentProps, useRouteMatch} from 'react-router-dom';\nimport {routes, IRouter} from 'src/routes';\nimport '../assets/style/fonts.css';\nimport {GlobalStyle} from '../assets/normalize';\n\nimport ScrollBar from 'src/components/scroll-bar';\n\nexport interface MainProps {\n  isFederate: boolean\n}\n\nexport const App = (props: MainProps) => {\n  const {isFederate} = props;\n  const {path} = useRouteMatch();\n  return (\n    <div style={{backgroundColor: '#EDF5FF'}}>\n      <GlobalStyle />\n      <div style={{position: 'relative', /* marginTop: '6.8vh'*/}}>\n        <Switch>\n          {routes.map((route: IRouter, i: number) => (\n            <Route\n              key={i}\n              exact={route.exact}\n              path={`${path}${route.path}`}\n              render={(props: RouteComponentProps) => {\n                return <ScrollBar\n                  height={`calc(100vh - ${isFederate ? 104 : 48}px)`}>\n                  <route.component {...props} />\n                </ScrollBar>;\n              }}\n            />\n          ))}\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import * as actionTypes from './actionTypes';\nimport {\n  ApplicationAction,\n  ApplicationState\n} from './types';\n\nconst initialState: any = {\n};\n\nconst applicationReducer = (\n    state: any = initialState,\n    action: ApplicationAction\n): ApplicationState => {\n  switch (action.type) {\n    case actionTypes.GET_APPLICATIONS:\n      return {\n        ...state,\n        appIsLoading: true\n      };\n    case actionTypes.GET_APPLICATIONS_SUCCESS:\n      return {\n        ...state,\n        appIsLoading: false,\n        applications: action.applications,\n        totalPages: action.totalPages\n      };\n  }\n  return state;\n};\n\nexport default applicationReducer;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport {connectRouter, routerMiddleware} from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport applicationsReducer from 'src/data-layer/application/reducer';\nimport {history} from 'src/history';\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst logger = createLogger({\n  collapsed: true\n});\n\nconst createRootReducer = () => combineReducers({\n  router: connectRouter(history),\n  applicationsReducer,\n});\nconst routerMiddle = routerMiddleware(history);\n\nconst getMiddlewares = () => {\n  return isDev ? [routerMiddle, thunk, logger] : [routerMiddle, thunk];\n};\n\nconst store = createStore(\n    createRootReducer(),\n    applyMiddleware(...getMiddlewares())\n);\n\nexport default store;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'connected-react-router';\nimport {history} from '../history';\nimport {App} from './app';\nimport store from '../data-layer/store';\n\nexport default (props: any) => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App {...props}/>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport App from 'src/app';\n\nfunction Exposes(props: any) {\n  return (<App isFederate={true} {...props}/>);\n}\n\nexport default Exposes;\n"],"sourceRoot":""}